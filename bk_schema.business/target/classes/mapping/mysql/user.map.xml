<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cr.usermanager.dao.UserMapper">
	<resultMap id="userResultMap" type="com.cr.usermanager.api.User">
		<id property="id" column="id"/>
		<result property="userAccount" column="user_account"/>
		<result property="password" column="password"/>
		<result property="name" column="name"/>
		<result property="enabled" column="is_enabled"/>
		<result property="email" column="email"/>
		<result property="orgId" column="org_id"/>
		<result property="lastLoginDate" column="last_login_date"/>
		<result property="createDate" column="create_date"/>
		<result property="remark" column="remark"/>
	</resultMap>

	<insert id="addUser" parameterType="com.cr.usermanager.api.User" keyProperty="id"
			useGeneratedKeys="true">
		INSERT INTO user (id, user_account, name, password, is_enabled, email,
						  org_id, create_date, remark)
		VALUES (#{id}, #{userAccount}, #{name}, #{password}, #{enabled}, #{email}, 				#{orgId}, #{createDate}, #{remark});
	</insert>
	<insert id="setUserRole">
		INSERT INTO user_role (user_id, role_id) VALUES
		<foreach collection="roleIds" item="roleId" index="index" separator=",">
			(#{id}, #{roleId})
		</foreach>
	</insert>
	<insert id="setUserAuth">
		INSERT INTO user_auth (user_id, resource_id) VALUES
		<foreach collection="authIds" item="authId" index="index" separator=",">
			(#{id}, #{authId})
		</foreach>
	</insert>
	<update id="deleteUser">
		UPDATE user
		SET is_delete = TRUE
		WHERE id = #{id};
	</update>
	<update id="updateUser">
		UPDATE user
		SET name = #{user.name}, email = #{user.email}, org_id = #{user.orgId}, remark = #{user.remark}
		WHERE id = #{id};
	</update>
	<update id="resetUserPwd">
		UPDATE user
		SET password = #{pwd}
		WHERE id = #{id};
	</update>
	<update id="setUserStatus">
		UPDATE user
		SET is_enabled = #{status}
		WHERE id = #{id};
	</update>
	<update id="changeOrg">
		UPDATE user
		SET org_id = #{orgId}
		WHERE id = #{id};
	</update>
	<update id="updateUserPwd">
		UPDATE user
		SET password = #{newPwd}
		WHERE user_account = #{currentAccount};
	</update>
	<delete id="deleteUserRole">
		DELETE FROM user_role
		WHERE user_id = #{id};
	</delete>
	<delete id="deleteUserAuth">
		DELETE FROM user_auth
		WHERE user_id = #{id};
	</delete>
	<select id="getUser" resultMap="userResultMap">
		SELECT *
		FROM user
		WHERE id = #{id} AND is_delete = FALSE;
	</select>
	<select id="getUsers" resultMap="userResultMap">
		SELECT *
		FROM user
		WHERE is_delete = FALSE;
	</select>
	<select id="hasAccountExist" resultType="java.lang.Integer">
		SELECT COUNT(0)
		FROM user
		WHERE user_account = #{account};
	</select>
	<select id="getUserAuth" resultType="java.lang.String">
		SELECT resource_id
		FROM user_auth
		WHERE user_id = #{id};
	</select>
	<select id="getUserOrg" resultType="java.lang.String">
		SELECT org_id
		FROM user
		WHERE id = #{id};
	</select>
	<select id="getUserRole" resultType="java.lang.String">
		SELECT role_id
		FROM user_role
		WHERE user_id = #{id};
	</select>
	<select id="getUsersByOrg" resultMap="userResultMap">
		SELECT * FROM user WHERE is_delete = FALSE AND org_id in
		<foreach item="id" collection="orgIds" open="(" separator=","
				 close=")">
			#{id}
		</foreach>
	</select>
	<select id="getUsersByRoleId" resultMap="userResultMap">
		SELECT u.* FROM user u
		LEFT JOIN user_role ur ON u.id = ur.user_id
		WHERE is_delete = FALSE AND ur.role_id = #{roleId}
	</select>
	<select id="getUserByAccount" resultMap="userResultMap">
		SELECT *
		FROM user
		WHERE is_delete = FALSE AND user_account = #{userAccount};
	</select>
	<select id="verifyPwd" resultType="java.lang.Integer">
		SELECT COUNT(0)
		FROM user
		WHERE is_delete = FALSE AND user_account = #{currentAccount} AND password = #{originPwd};
	</select>
</mapper>